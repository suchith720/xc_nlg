# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb.

# %% auto 0
__all__ = ['pkl_dir', 'pkl_file', 'args', 'metric', 'bsz', 'model', 'learn']

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 2
import os,torch, torch.multiprocessing as mp, pickle
from xcai.basics import *
from xcai.models.PPP0XX import DBT009,DBT011

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 4
os.environ['CUDA_VISIBLE_DEVICES'] = '0,1'
os.environ['WANDB_PROJECT']='xc-nlg_66-radga-dr-ep-for-wikiseealso'

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 24
pkl_dir = '/home/scai/phd/aiz218323/scratch/datasets'
pkl_file = f'{pkl_dir}/processed/wikiseealso_data-metas_distilbert-base-uncased_rm_radga-aug-cat-hlk-block-032.pkl'
with open(pkl_file, 'rb') as file: block = pickle.load(file)

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 26
block.train.dset.data.lbl_info['input_ids'] = block.train.dset.data.lbl_info['input_ids_aug_cat']
block.train.dset.data.lbl_info['attention_mask'] = block.train.dset.data.lbl_info['attention_mask_aug_cat']
block.test.dset.data.lbl_info['input_ids'] = block.test.dset.data.lbl_info['input_ids_aug_cat']
block.test.dset.data.lbl_info['attention_mask'] = block.test.dset.data.lbl_info['attention_mask_aug_cat']

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 28
args = XCLearningArguments(
    output_dir='/home/scai/phd/aiz218323/scratch/outputs/67-ngame-ep-for-wikiseealso-with-input-concatenation-1-2',
    logging_first_step=True,
    per_device_train_batch_size=800,
    per_device_eval_batch_size=800,
    representation_num_beams=200,
    representation_accumulation_steps=10,
    save_strategy="steps",
    evaluation_strategy="steps",
    eval_steps=5000,
    save_steps=5000,
    save_total_limit=5,
    num_train_epochs=300,
    predict_with_representation=True,
    representation_search_type='INDEX',
    adam_epsilon=1e-6,
    warmup_steps=100,
    weight_decay=0.01,
    learning_rate=2e-4,
    group_by_cluster=True,
    num_clustering_warmup_epochs=10,
    num_cluster_update_epochs=5,
    num_cluster_size_update_epochs=25,
    clustering_type='EXPO',
    minimum_cluster_size=2,
    maximum_cluster_size=1600,
    target_indices_key='plbl2data_idx',
    target_pointer_key='plbl2data_data2ptr',
    use_encoder_parallel=True,
    max_grad_norm=None,
    fp16=True,
)

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 30
metric = PrecRecl(block.n_lbl, block.test.data_lbl_filterer, prop=block.train.dset.data.data_lbl,
                  pk=10, rk=200, rep_pk=[1, 3, 5, 10], rep_rk=[10, 100, 200])

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 31
bsz = max(args.per_device_train_batch_size, args.per_device_eval_batch_size)*torch.cuda.device_count()

model = DBT009.from_pretrained('sentence-transformers/msmarco-distilbert-base-v4', bsz=bsz, tn_targ=5000, margin=0.3, tau=0.1,
                               n_negatives=10, apply_softmax=True, use_encoder_parallel=True)
model.init_dr_head()

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 32
learn = XCLearner(
    model=model,
    args=args,
    train_dataset=block.train.dset,
    eval_dataset=block.test.dset,
    data_collator=block.collator,
    compute_metrics=metric,
)

# %% ../nbs/67-ngame-ep-for-wikiseealso-with-input-concatenation.ipynb 35
if __name__ == '__main__':
    mp.freeze_support()
    learn.train(resume_from_checkpoint=True)
