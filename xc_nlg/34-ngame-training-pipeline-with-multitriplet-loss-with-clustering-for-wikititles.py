# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb.

# %% auto 0
__all__ = ['block', 'args', 'metric', 'bsz', 'model', 'learn']

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 4
import os,torch, torch.multiprocessing as mp
from xcai.basics import *
from xcai.models.MMM00X import DBT009

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 6
os.environ['CUDA_VISIBLE_DEVICES'] = '6,7'
os.environ['WANDB_PROJECT']='xc-nlg_34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles'

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 7
block = XCBlock.from_cfg('/home/aiscuser/scratch/datasets', 'data', dset='wikititles', valid_pct=0.001, 
                         tfm='xcnlg', tokenizer='distilbert-base-uncased', smp_features=[('lbl2data',1,2)])

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 8
args = XCLearningArguments(
    output_dir='/home/aiscuser/outputs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles-2-0',
    logging_first_step=True,
    per_device_train_batch_size=800,
    per_device_eval_batch_size=800,
    representation_num_beams=200,
    representation_accumulation_steps=100,
    save_strategy="steps",
    evaluation_strategy='steps',
    eval_steps=1000,
    save_steps=1000,
    save_total_limit=5,
    num_train_epochs=50,
    predict_with_representation=True,
    representation_search_type='BRUTEFORCE',
    target_indices_key='plbl2data_idx',
    target_pointer_key='plbl2data_data2ptr',
    adam_epsilon=1e-6,
    warmup_steps=100,
    weight_decay=0.1,
    learning_rate=2e-4,
    group_by_cluster=True,
    num_clustering_warmup_epochs=1,
    num_cluster_update_epochs=1,
    num_cluster_size_update_epochs=1,
    clustering_type='EXPO',
    minimum_cluster_size=1,
    maximum_cluster_size=300,
    metric_for_best_model='P@1',
    load_best_model_at_end=True,
    fp16=True,
)

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 10
metric = PrecRecl(block.n_lbl, block.test.data_lbl_filterer, prop=block.train.dset.data.data_lbl,
                  pk=10, rk=200, rep_pk=[1, 3, 5, 10], rep_rk=[10, 100, 200], pa=0.5, pb=0.4)

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 12
bsz = max(args.per_device_train_batch_size, args.per_device_eval_batch_size)*torch.cuda.device_count()
model = DBT009.from_pretrained('distilbert-base-uncased', bsz=bsz, tn_targ=1000, margin=0.3, tau=0.1, 
                               n_negatives=5, apply_softmax=True)

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 14
learn = XCLearner(
    model=model, 
    args=args,
    train_dataset=block.train.dset,
    eval_dataset=block.test.dset,
    data_collator=block.collator,
    compute_metrics=metric,
)

# %% ../nbs/34-ngame-training-pipeline-with-multitriplet-loss-with-clustering-for-wikititles.ipynb 17
if __name__ == '__main__':
    mp.freeze_support()
    learn.train()
