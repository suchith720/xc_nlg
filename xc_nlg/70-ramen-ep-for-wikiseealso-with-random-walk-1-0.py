# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb.

# %% auto 0
__all__ = ['pkl_dir', 'pkl_file', 'args', 'metric', 'bsz', 'model', 'learn']

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 3
import os,torch, torch.multiprocessing as mp, pickle
from xcai.basics import *
from xcai.graph.random_walk import *
from xcai.models.PPP0XX import DBT021

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 5
os.environ['CUDA_VISIBLE_DEVICES'] = '0,1'
os.environ['WANDB_PROJECT']='xc-nlg_xc-nlg_66-radga-dr-ep-for-wikiseealso'

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 9
pkl_dir = '/home/scai/phd/aiz218323/scratch/datasets/processed'
pkl_file = f'{pkl_dir}/wikiseealso_data-meta_distilbert-base-uncased_rm_ramen-corel.pkl'

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 12
with open(pkl_file, 'rb') as file: block = pickle.load(file)

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 30
args = XCLearningArguments(
    output_dir='/home/scai/phd/aiz218323/scratch/outputs/70-ramen-ep-for-wikiseealso-with-random-walk-1-0',
    logging_first_step=True,
    per_device_train_batch_size=800,
    per_device_eval_batch_size=800,
    representation_num_beams=200,
    representation_accumulation_steps=100,
    save_strategy="steps",
    evaluation_strategy="steps",
    eval_steps=3000,
    save_steps=3000,
    save_total_limit=5,
    num_train_epochs=300,
    predict_with_representation=True,
    adam_epsilon=1e-6,
    warmup_steps=100,
    weight_decay=0.01,
    learning_rate=2e-4,
    generation_num_beams=10,
    generation_length_penalty=1.5,
    predict_with_generation=True,
    representation_search_type='INDEX',
    group_by_cluster=True,
    num_clustering_warmup_epochs=10,
    num_cluster_update_epochs=5,
    num_cluster_size_update_epochs=25,
    clustering_type='EXPO',
    minimum_cluster_size=2,
    maximum_cluster_size=1600,
    output_concatenation_weight=1.0,
    metric_for_best_model='P@1',
    load_best_model_at_end=True,
    target_indices_key='plbl2data_idx',
    target_pointer_key='plbl2data_data2ptr',
    use_encoder_parallel=True,
    max_grad_norm=None,
    fp16=True,
    label_names=['dco2data_idx', 'dco2data_input_ids', 'dco2data_attention_mask'],
    
    prune_metadata=False,
    num_metadata_prune_epochs=5,
    metadata_prune_batch_size=2048,
    num_metadata_prune_warmup_epochs=0,
    prune_metadata_names=['cat_meta']
)

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 31
metric = PrecRecl(block.n_lbl, block.test.data_lbl_filterer, prop=block.train.dset.data.data_lbl,
                  pk=10, rk=200, rep_pk=[1, 3, 5, 10], rep_rk=[10, 100, 200])

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 32
bsz = max(args.per_device_train_batch_size, args.per_device_eval_batch_size)*torch.cuda.device_count()

model = DBT021.from_pretrained('sentence-transformers/msmarco-distilbert-base-v4', bsz=bsz, tn_targ=5000, margin=0.3, tau=0.1, 
                               apply_softmax=True, n_negatives=10, m_lw=0.15, meta_prefix='dco', use_encoder_parallel=True, 
                               task_repr_type='pool', meta_repr_type='pool')
model.init_dr_head()

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 34
learn = XCLearner(
    model=model, 
    args=args,
    train_dataset=block.train.dset,
    eval_dataset=block.test.dset,
    data_collator=block.collator,
    compute_metrics=metric,
)

# %% ../nbs/70-ramen-ep-for-wikiseealso-with-random-walk.ipynb 36
if __name__ == '__main__':
    mp.freeze_support()
    learn.train()
